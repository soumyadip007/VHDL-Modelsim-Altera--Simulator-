--library declaration
library ieee;
    -- package dec
       use IEEE.STD_LOGIC_1164.ALL;
       use ieee.NUMERIC_STD.all;
       use ieee.std_logic_unsigned.all; 
       
    --entity declaration
    --aludesign is the entity name
        entity shifter is
        port
            (
            a: in std_logic_vector(3 downto 0);-- a and b are inputs
            op:in std_logic_vector(2 downto 0);  -- op stands for operation eg. addition
            zero:out std_logic;                  -- flag bit to set or reset the temp variable
            f:out std_logic_vector(3 downto 0)   -- output variable
            );
        end shifter;
    --architecture dec
    --bhv is our architecture name for the entity    
        architecture bhv of shifter is
        --Begining the architecture body
        begin
            --declaring the process    
                process(op,a)
                --temporary variable declaration
                variable temp: std_logic_vector(3 downto 0);
                --begining the case block
                begin
                    case op is
                            when "000" =>
                            temp := std_logic_vector(unsigned(a) sll 1);
                             when "001" =>
                            temp :=std_logic_vector(unsigned(a) srl 1);
                             when "010" =>
                            temp :=std_logic_vector(shift_left(signed(a),1));
                             when "011" =>
                            temp :=std_logic_vector(shift_right(signed(a),1));
                            when "100" =>
                            temp:=std_logic_vector(unsigned(a) rol 1);
                            when "101" =>
                            temp:=std_logic_vector(unsigned(a) ror 1);
                            when others =>
                            temp:= "0000";
                             end case;
                        --end case block
                        --start of if block
                        if temp="0000" then
                            zero<= '1';--reset mode
                            else
                            zero<='0';--set mode
                        end if;
                        f<=temp; --transfering the output to f channel
                    end process;
                    
                end bhv;
